[{"/home/mkrtich/Desktop/github_jobs/src/index.js":"1","/home/mkrtich/Desktop/github_jobs/src/App.js":"2","/home/mkrtich/Desktop/github_jobs/src/components/notFound.jsx":"3","/home/mkrtich/Desktop/github_jobs/src/components/header.component.jsx":"4","/home/mkrtich/Desktop/github_jobs/src/pages/description.pages.jsx":"5","/home/mkrtich/Desktop/github_jobs/src/pages/searchpage.pages.jsx":"6","/home/mkrtich/Desktop/github_jobs/src/components/footer.component.jsx":"7","/home/mkrtich/Desktop/github_jobs/src/components/sidebar.jsx":"8","/home/mkrtich/Desktop/github_jobs/src/components/jobList.jsx":"9","/home/mkrtich/Desktop/github_jobs/src/components/SearchBar.component.jsx":"10","/home/mkrtich/Desktop/github_jobs/src/components/jobDescription.jsx":"11","/home/mkrtich/Desktop/github_jobs/src/components/loader.jsx":"12","/home/mkrtich/Desktop/github_jobs/src/ui-kits/Input.jsx":"13","/home/mkrtich/Desktop/github_jobs/src/components/job.jsx":"14","/home/mkrtich/Desktop/github_jobs/src/components/pagination.jsx":"15"},{"size":342,"mtime":1614711821188,"results":"16","hashOfConfig":"17"},{"size":4635,"mtime":1615900788113,"results":"18","hashOfConfig":"17"},{"size":85,"mtime":1614528767008,"results":"19","hashOfConfig":"17"},{"size":156,"mtime":1614528090515,"results":"20","hashOfConfig":"17"},{"size":530,"mtime":1615642636549,"results":"21","hashOfConfig":"17"},{"size":509,"mtime":1615914235495,"results":"22","hashOfConfig":"17"},{"size":153,"mtime":1614551415377,"results":"23","hashOfConfig":"17"},{"size":2631,"mtime":1615642636401,"results":"24","hashOfConfig":"17"},{"size":2062,"mtime":1615915987305,"results":"25","hashOfConfig":"17"},{"size":725,"mtime":1615900788121,"results":"26","hashOfConfig":"17"},{"size":1116,"mtime":1615900788121,"results":"27","hashOfConfig":"17"},{"size":253,"mtime":1615646077241,"results":"28","hashOfConfig":"17"},{"size":709,"mtime":1615900788121,"results":"29","hashOfConfig":"17"},{"size":823,"mtime":1615730330478,"results":"30","hashOfConfig":"17"},{"size":3063,"mtime":1615912621415,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1gm9yp",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mkrtich/Desktop/github_jobs/src/index.js",[],["64","65"],"/home/mkrtich/Desktop/github_jobs/src/App.js",["66","67"],"import React, { Component } from \"react\";\nimport NavLogo from \"./components/header.component\";\nimport FooterLogo from \"./components/footer.component\";\nimport SearchPage from \"./pages/searchpage.pages\";\nimport { Switch, Route } from \"react-router-dom\";\nimport notFound from \"./components/notFound\";\nimport Description from \"./pages/description.pages\";\nimport axios from \"axios\";\n\nexport default class App extends Component {\n  state = {\n    jobs: [],\n    filteredJobs: [],\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  async fetchData() {\n    const dataToSubmit = [];\n    try {\n      const promise1 = await axios.get(\n        \"https://limitless-harbor-63035.herokuapp.com/https://remoteok.io/api\"\n      );\n      const promise2 = await axios.get(\n        \"https://limitless-harbor-63035.herokuapp.com/https://jobs.github.com/positions.json?search=node\"\n      );\n      Promise.all([promise1, promise2]).then((values) => {\n        values.forEach((value) => {\n          dataToSubmit.push(value.data);\n        });\n\n        const result = [];\n        result.push(\n          dataToSubmit[0]\n            .map((el) => {\n              return {\n                name: el.company || \"Job Opportunity\",\n                position: el.position,\n                logo:\n                  el.company_logo ||\n                  \"https://www.logodesign.net/logo/abstract-cuboid-building-4519ld.png\",\n                date: el.date,\n                description:\n                  el.description || `This company hasn't provided description`,\n                location: el.location || \"Remote\",\n                url: el.apply_url,\n              };\n            })\n            .filter((el) => el.position)\n        );\n\n        result.push(\n          dataToSubmit[1]\n            .map((el) => {\n              return {\n                name: el.company || \"Job Opportunity\",\n                position: el.title,\n                logo:\n                  el.company_logo ||\n                  \"https://www.logodesign.net/logo/abstract-cuboid-building-4519ld.png\",\n                date: el.created_at,\n                description:\n                  el.description || `This company hasn't provided description`,\n                location: el.location || \"Remote\",\n                url: el.url,\n              };\n            })\n            .filter((el) => el.position)\n        );\n\n        const jobPosts = [...result[0], ...result[1]];\n\n        const noShowList = [\n          \"ios\",\n          \"android\",\n          \"devOps\",\n          \"Data\",\n          \"Recruiter\",\n          \"Marketer\",\n          \"C++\",\n          \"Mobile App\",\n          \"Mobile Developer\",\n          \"Content Writer\",\n        ].map((el) => el.toLowerCase());\n\n        let elementIsNotIncluded = true;\n\n        let allJobs = jobPosts.filter((cur) => {\n          elementIsNotIncluded = true;\n\n          cur.position\n            .toLowerCase()\n            .split(\" \")\n            .forEach((el) => {\n              if (noShowList.includes(el)) {\n                elementIsNotIncluded = false;\n              }\n            });\n\n          if (elementIsNotIncluded) return cur;\n        });\n\n        this.setState({\n          jobs: allJobs,\n          filteredJobs: allJobs,\n        });\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  handleFilter = (value) => {\n    let fullMatch = value.split(\" \").join(\"\").toLowerCase();\n    let partialMatch = value.trim().split(\" \");\n\n    const remaining = [];\n\n    const result = this.state.jobs.filter((job) => {\n      let pos = job.position.split(\" \").join(\"\").toLowerCase();\n\n      if (pos.includes(fullMatch)) {\n        return job;\n      } else {\n        remaining.push(job);\n      }\n    });\n\n    remaining.forEach((job) => {\n      let shouldSkip = false;\n      let pos = job.position.split(\" \").join(\"\").toLowerCase();\n\n      partialMatch.forEach((el) => {\n        if (shouldSkip) {\n          return;\n        }\n        if (pos.includes(el.toLowerCase())) {\n          result.push(job);\n          shouldSkip = true;\n          return;\n        }\n      });\n    });\n    this.setState({\n      filteredJobs: result,\n    })\n  };\n\n  render() {\n    return (\n      <div className=\"px-24\">\n        <NavLogo />\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            component={() => (\n              <SearchPage\n                jobs={this.state.filteredJobs}\n                filterJob={this.handleFilter}\n              />\n            )}\n          />\n          <Route exact path=\"/description/:id\" component={Description} />\n          <Route component={notFound} />\n        </Switch>\n        <FooterLogo />\n      </div>\n    );\n  }\n}\n","/home/mkrtich/Desktop/github_jobs/src/components/notFound.jsx",[],"/home/mkrtich/Desktop/github_jobs/src/components/header.component.jsx",[],"/home/mkrtich/Desktop/github_jobs/src/pages/description.pages.jsx",[],"/home/mkrtich/Desktop/github_jobs/src/pages/searchpage.pages.jsx",[],"/home/mkrtich/Desktop/github_jobs/src/components/footer.component.jsx",[],"/home/mkrtich/Desktop/github_jobs/src/components/sidebar.jsx",[],"/home/mkrtich/Desktop/github_jobs/src/components/jobList.jsx",[],"/home/mkrtich/Desktop/github_jobs/src/components/SearchBar.component.jsx",[],"/home/mkrtich/Desktop/github_jobs/src/components/jobDescription.jsx",[],"/home/mkrtich/Desktop/github_jobs/src/components/loader.jsx",[],"/home/mkrtich/Desktop/github_jobs/src/ui-kits/Input.jsx",[],"/home/mkrtich/Desktop/github_jobs/src/components/job.jsx",[],"/home/mkrtich/Desktop/github_jobs/src/components/pagination.jsx",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":90,"column":45,"nodeType":"74","messageId":"75","endLine":90,"endColumn":47},{"ruleId":"72","severity":1,"message":"73","line":121,"column":49,"nodeType":"74","messageId":"75","endLine":121,"endColumn":51},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]